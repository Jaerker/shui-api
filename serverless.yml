# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: ${file(./local.yml):org}
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: shui-api
# "service" is the name of this project. This will also be added to your AWS resource names.
service: shui-api

provider:
  name: aws
  runtime: nodejs20.x
  region: eu-north-1
  deploymentMethod: direct
  iam:
    role: ${file(./local.yml):iamRole}

build: 
  esbuild:
    minify: true

functions:
  GetAll:
    handler: functions/Messages/GetAll/index.handler
    events:
      - httpApi:
          path: /messages
          method: get
  GetById:
    handler: functions/Messages/GetById/index.handler
    events:
      - httpApi:
          path: /messages/{id}
          method: get
  Create:
    handler: functions/Messages/Create/index.handler
    events:
      - httpApi:
          path: /messages
          method: post
  Update:
    handler: functions/Messages/Update/index.handler
    events:
      - httpApi:
          path: /messages/{id}
          method: put
  DeleteById:
    handler: functions/Messages/DeleteById/index.handler
    events:
      - httpApi:
          path: /messages/{id}
          method: delete

resources:
  Resources:
    MessageTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${file(./local.yml):dbTable}
        AttributeDefinitions:
          - AttributeName: 'pk'
            AttributeType: 'S'
          - AttributeName: 'id'
            AttributeType: 'S'
        KeySchema:
          - AttributeName: 'pk'
            KeyType: HASH
          - AttributeName: 'id'
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST